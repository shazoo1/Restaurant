@model Restaurant.Web.Models.Order.View.OrderViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Детали заказа";
}

<div class="jumbotron" style="background-image:url(../../Content/images/new-order-background.jpg)">
    <div class="highlighter">
        <h2>Детали заказа</h2>
    </div>
</div>
<div class="row">
    @{Html.RenderPartial("~/Views/Orders/Partial/AmendOrderHeaderPartialView.cshtml", Model.OrderHeader);}
    <div class="col-md-8" style="display:inline">
        <h3 style="text-align:center">Блюда</h3>
        <table class="table" id="dishes">
            <tr class="row">
                <th class="col-sm">Блюдо</th>
                <th class="col-sm">Количество</th>
                <th class="col-sm">Стоимость</th>
            </tr>
            @foreach (var dish in Model.Dishes)
            {
            <tr class="row">
                <td class="col-sm">@dish.Name</td>
                <td class="col-sm">@dish.Quantity</td>
                <td class="col-sm">@dish.Price</td>
            </tr>
            }
        </table>
    </div>
</div>
<div class="amend-options-container">
        <h5>Доступные действия</h5>
        @if (Model.IsCook)
        {
            using (Html.BeginForm("SetCooked", "Orders", FormMethod.Post, new { @class="btn btn-warning"}))
            {
                <input type="hidden" name="id" value="@Model.OrderHeader.Id" />
                <input type="submit" value="Отметить готовым" />
            }
        }
        else if (Model.IsWaiter)
        {
            if (Model.OrderHeader.OrderState == "ready")
            {
                using (Html.BeginForm("SetServed", "Orders", FormMethod.Post, new { @class = "btn btn-warning" }))
                {
                    <input type="hidden" name="id" value="@Model.OrderHeader.Id" />
                    <input type="submit" value="Отметить поданным" />
                }
                using (Html.BeginForm("SetPaid", "Orders", FormMethod.Post, new { @class = "btn btn-warning" }))
                {
                    <input type="hidden" name="id" value="@Model.OrderHeader.Id" />
                    <input type="submit" value="Отметить оплаченным" />
                }
            }
            if (Model.OrderHeader.OrderState == "served")
            {
                using (Html.BeginForm("SetPaid", "Orders", FormMethod.Post, new { @class = "btn btn-warning" }))
                {
                    <input type="hidden" name="id" value="@Model.OrderHeader.Id" />
                    <input type="submit" value="Отметить оплаченным" />
                }
            }
            if (Model.OrderHeader.OrderState == "accepted")
            {
                <input class="btn btn-warning" type="button" value="Добавить блюдо" data-toggle="collapse" data-target="#addDishMenu" />
                <table class="collapse table" id="addDishMenu" style="table-layout:fixed; width: 80%">
                    
                    <thead>
                        <tr>
                            <th width="20%"><h6>Название</h6></th>
                            <th width="10%"><h6>Цена</h6></th>
                            <th width="50%"><h6>Описание</h6></th>
                            <th width="10%"><h6>Количество</h6></th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <td><input id="send" type="submit" value="Добавить" /></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
                <script>
                var unselected;
                var selected = [];
                var selectedOrderId = "@Model.OrderHeader.Id.ToString()";
                window.onload = function () {
                unselected = @Html.Raw(Json.Encode(Model.OtherDishes));
                for (var i = 0; i < unselected.length; i++) {
                    var nameCell = '<td>' + unselected[i].Name + '</td>';
                    var priceCell = '<td>' + unselected[i].Price + '</td>';
                    var descCell = '<td>' + unselected[i].Description + '</td>';
                    var counter = '<td><input id="count" type="number"' +
                        ' step="1" min="0" class="amend-dish-counter" onchange="setDishesCount(this)"/></td>';
                    var row = '<tr id="' + unselected[i].Id + '">'
                        + nameCell + priceCell + descCell + counter + '</tr>';
                    $('#addDishMenu').append(row);
                    }
                    this.document.getElementById('send').addEventListener('click', function () {
                        $.post('@(Url.Action("Change", "Orders"))', {
                            dishes: selected,
                            orderId: selectedOrderId
                        }, function (data) {
                            window.location.href = data;
                        });
                    });
                };
                function setDishesCount(counter) {
                    var count = counter.value * 1;
                    var dishId = counter.closest('tr').id;
                    var orderPart
                    if (count > 0) {

                        if (selected !== undefined) {
                            orderPart = selected.find(x => x.Dish.Id === dishId);
                        }
                        if (orderPart === undefined) {
                            selected.push({
                                'Dish': unselected.find(x => x.Id === dishId),
                                'Quantity': count
                            });
                        }
                        else { orderPart.Quantity = count }
                    } else {
                        if (selected !== undefined) {
                            orderPartindex = selected.findIndex(x =>
                                x.Dish.Id === dishId);
                            selected.splice(orderPartindex, 1);
                        }
                    }
                }
                </script>
            }
        }
        else
        {
            <p>Для этого заказа нет доступных действий.</p>
        }
</div>